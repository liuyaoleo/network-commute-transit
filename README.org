#+TITLE: Network Transit
#+AUTHOR: David James, davidabraham@ucla.edu
#+DATE: 2020 Feb 20

This project calcultes the network travel time between a source and destination point for transit routes.
It uses Open Trip Planner (otp) software to calculate the time difference.

Project was created by David James for the Institute of Transportation Studies (ITS).

* Design
  1. Program was implemented with Python 3.7 alongside Java
  2. It mains the following dependencies
     | Packages                   |
     |----------------------------|
     | pandas                     |
     | requests                   |
     | datetime                   |
     | multiprocessing (included) |
  3. The Java side is what creates and runs the OTP server, and it needs to be running before running the Python script
  4. The current script has been implemented with it to execute the calculations in parallel
** Files
   - README.org
     - documentation on current project
   - tester.py
     - the script designed to run concurrently with the software
   - util/intro-otp.pdf
     - another tutorial that descibes how to use OTP
* Executing
  1. Collecting Files
     1. You will need to collect the otp.jar file
        1. Go to https://repo1.maven.org/maven2/org/opentripplanner/otp/
        2. Navigate to the directory of the highest version number and download the file with extension .shaded.jar.
     2. You will need to collect the necessary GTFS files and the needed map file, so OTP knows what it will be generating
        1. NOTE: GTFS files must be zipped up, and all its contents should be in the root of the zip archive
        2. the map file is downloaded from http://download.geofabrik.de/ go through the subregions until you find the map resolution that you need and download the .osm.pbf file
     3. You should shrink your pbf map file, so that you don't need as much RAM to run the server
        #+BEGIN_SRC bash
          # this is an example of the command that can shrink the pbf file
          # you will need to install osmconvert if your system doesn't have it yet
          osmconvert oregon-latest.osm.pbf -b=-123.043,45.246,-122.276,45.652 --complete-ways -o=portland.pbf
        #+END_SRC
        1. https://boundingbox.klokantech.com/ set to CSV outputs the value needed for the -b flag
     4. After you have gotten the necessary files, we will put the files in the following directory manner
        1. the root directory will be "otp" and it'll contain a "graphs" directoy and the .jar file
        2. the "graphs" directory will have another directory called "current"
        3. the "current" directory will contain your gtfs files and the pbf map file
           1. NOTE: the "current" directory must only contain ONE pbf file
              1. if you decided to shrink the original file, move it somewhere else, so OTP doesn't overwrite
  2. OTP Server
     #+BEGIN_SRC bash
       # make sure you are in the "otp" directory
       # the following command generates the object
       # file with the map and gtfs files given in the "current" directory
       java -Xmx3G -jar otp.jar --build graphs/current

       # Starting up the OTP server requires the following command
       java -Xmx3G -jar otp.jar --router current --graphs graphs --server
     #+END_SRC
     1. Response
        1. http://dev.opentripplanner.org/apidoc/1.0.0/json_Response.html
  3. Extra Help
     1. If extra documentation is need refer to http://docs.opentripplanner.org/en/latest/Basic-Tutorial/
